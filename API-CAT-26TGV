models.py
(
from django.db import models

class Customer(models.Model):
    name = models.CharField(max_length=255)
    email = models.EmailField(unique=True)

    def __str__(self):
        return self.name

class Order(models.Model):
    customer = models.ForeignKey(Customer, on_delete=models.CASCADE, related_name='orders')
    order_date = models.DateTimeField(auto_now_add=True)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f"Order {self.id} by {self.customer.name}"
)

views.py
# shop/views.py

from django.shortcuts import render
from .models import Order

# Simple homepage view
def home(request):
    return render(request, 'home.html')

# View to display all orders
def order_list(request):
    orders = Order.objects.all()  # Get all orders from the database
    return render(request, 'order_list.html', {'orders': orders})


# shop/urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('admin/', admin.site.urls),  # Admin URL for managing models
    path('home/', views.home,
name='home'),  # A simple homepage view
    path('orders/', views.order_list, name='order_list'),  # View all orders
]



# ecommerce/urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('shop.urls')),  # Include shop app URLs
]

TEMPLATES
home.html
<html>
<body>
    <h1>Welcome to the Shop</h1>
    <a href="/orders/">View All Orders</a>
</body>
</html>


order_list.html
<html>
<body>
    <h1>Order List</h1>
    <ul>
        {% for order in orders %}
            <li>
                Order ID: {{ order.id }}<br>
                Customer: {{ order.customer.name }}<br>
                Date: {{ order.order_date }}<br>
                Total Amount: {{ order.total_amount }}<br>
            </li>
        {% endfor %}
    </ul>
</body>
</html>


README FILE
Defined models for Customer and Order.
Registered models in the admin interface (admin.py).
Created URL routing for the views (urls.py).
Defined views to handle data (views.py).
Created templates to render the data (templates/).
Ran the server and tested the app.
